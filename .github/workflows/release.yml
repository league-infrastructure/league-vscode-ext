name: Build and Release VSCode Extension

on:
  push:
    branches:
      - master
    tags:
      - 'v*.*.*'
  pull_request:
    branches:
      - master

jobs:
  build-and-release:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout the repository
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Node.js (20+)
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '22'
          cache: 'npm'

      # Step 3: Install dependencies
      - name: Install dependencies
        run: npm install

      # Step 4: Build the VSCode extension
      - name: Build the VSCode extension
        run: npm run compile

      # Step 6: Package the extension
      - name: Package the VSCode extension
        run: npx @vscode/vsce package

      # Step 7: Determine the release tag
      - name: Extract release tag
        id: extract_tag
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            echo "release_tag=${{ github.ref_name }}" >> $GITHUB_ENV
          else
            commit_hash=$(echo "${{ github.sha }}" | cut -c1-5)
            echo "release_tag=latest-${commit_hash}" >> $GITHUB_ENV
          fi
        shell: bash


      # Step 8: Create a GitHub release
      - name: Create GitHub Release
        id: create_release  # Add an ID to capture outputs
        uses: actions/create-release@v1
        if: ${{ github.ref_type == 'tag' || github.ref_name == 'master' }}
        with:
          tag_name: ${{ env.release_tag }}
          release_name: ${{ env.release_tag }}
          body: "Release generated by GitHub Actions for ${{ env.release_tag }}"
          draft: false
          prerelease: false
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 7: Identify the generated VSIX file
      - name: Identify VSIX file
        id: find_vsix
        run: |
          VSIX_FILE=$(ls *.vsix | head -n 1)
          echo "vsix_file=$VSIX_FILE" >> $GITHUB_ENV
          echo "::set-output name=vsix_file::$VSIX_FILE"

      # Step 8: Debug: Show VSIX file
      - name: Debug: Show VSIX file
        run: echo "VSIX file: ${{ steps.find_vsix.outputs.vsix_file }}"

      # Step 9: Upload the VSIX file
      - name: Upload VSIX to Release
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: '${{ steps.find_vsix.outputs.vsix_file }}'
          asset_name: '${{ env.release_tag }}.vsix'
          asset_content_type: application/octet-stream
